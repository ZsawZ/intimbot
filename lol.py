# -*- coding: utf8 -*-
import random
#—Å–ª–∏—Ç–æ –≤ @slivmens
from random import randint
import string
#—Å–ª–∏—Ç–æ –≤ @slivmens
import telebot
from telebot.types import *
import requests
import sqlite3
import json
import os
from config import token,admin,vxodadmin,vxodworker,maxpromo,minimalka,maximalka,zalety,bot_username
from buttons import b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b22
from buttons import userpanel,menu,empty,cancel,bal
from answers import a0,a1,a11,a19,skolkochasov

bot=telebot.TeleBot(token)

@bot.message_handler(commands=['start'])
def send_welcome(message):
	con = sqlite3.connect("data.db")
	cur = con.cursor()
	cur.execute(f"select count(*) from users where id = {message.chat.id}")
	if cur.fetchone()[0] == 0:
		con.commit()
		ref = message.text
		if len(ref) != 6:
			try:
				ref = int(ref[7:])
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select count(*) from users where id = {ref}")
				if cur.fetchone()[0] != 0:
					con.commit()
					boss = ref
				else:
					con.commit()
					boss = admin

			except:
				boss = admin
		else:
			boss = admin
		id = message.chat.id
		name = (f"{message.chat.first_name} {'|'} {message.chat.last_name}")
		referals = 0
		user_name = message.chat.username
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"INSERT INTO users (id,name,referals,boss, username,photoid,balance) "
			f"VALUES ({id},\"{name}\",{referals},{boss}, \"{user_name}\",{1},{0})")
		con.commit()

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"SELECT referals FROM users WHERE id = {boss}")
		referal = cur.fetchone()[0]
		referals = referal + 1
		con.commit()
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"UPDATE users SET referals = {referals} WHERE id = {boss}")
		con.commit()

		bot.send_message(message.chat.id, f"ü§ó –ü—Ä–∏–≤–µ—Ç {message.chat.first_name}", reply_markup=userpanel())
		bot.send_message(boss, f"–£ –≤–∞—Å –Ω–æ–≤—ã–π –º–∞–º–æ–Ω—Ç {message.chat.first_name}")
		

#—Å–ª–∏—Ç–æ –≤ @slivmens

			

	else:
		con.commit()
		bot.send_message(message.chat.id, f"ü§ó –ü—Ä–∏–≤–µ—Ç {message.chat.first_name}", reply_markup=userpanel())


@bot.message_handler(content_types="text")
def main_message(message):
	if message.text == b0:
		bot.send_message(message.chat.id,a0)
	elif message.text==b1:
		try:
			
		
		
			keyboard = types.InlineKeyboardMarkup()
			q1 = types.InlineKeyboardButton(text=b14, callback_data="vybor")
			q2 = types.InlineKeyboardButton(text=b15, callback_data="photos")
			q3 = types.InlineKeyboardButton(text=b16, callback_data="prew")
			q4 = types.InlineKeyboardButton(text=b17, callback_data="next")
			keyboard.add(q1,q2)
			keyboard.add(q3,q4)

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select count(*) from ancety")
			dostup=cur.fetchone()[0]
			con.commit()

			if dostup == 0:
				bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç—ã –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã")
			else:

				bot.send_message(message.chat.id,a1,reply_markup=menu())
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select photoid from users where id = {message.chat.id}")
				imgid = cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select status from ancety where id = {imgid}")
				stat = cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select count(*) from ancety")
				counta=cur.fetchone()[0]
				con.commit()

				if imgid>counta:
					imgid=1

				while stat ==0 :
					imgid+=1
					if imgid>counta:
						imgid=1
					con = sqlite3.connect("data.db")
					cur = con.cursor()
					cur.execute(f"select status from ancety where id = {imgid}")
					stat = cur.fetchone()[0]
					con.commit()


#—Å–ª–∏—Ç–æ –≤ @slivmens

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select mainphoto from ancety where id = {imgid}")
				img = cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select name from ancety where id = {imgid}")
				aname = cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select cena from ancety where id = {imgid}")
				acena = cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select about from ancety where id = {imgid}")
				aabout = cur.fetchone()[0]
				con.commit()

				texttext = f"‚ù£Ô∏è–ê–Ω–∫–µ—Ç–∞ ‚Ññ{imgid}\n\nüíÅ‚Äç‚ôÄÔ∏è–ò–º—è: {aname}\n\nüí∞–¶–µ–Ω–∞ –∑–∞ —á–∞—Å: {acena}\n\nüßö‚Äç‚ôÄÔ∏è–û —Å–µ–±–µ: {aabout}"
				


				imglink=f"images/{img}"
				photo = open(imglink, 'rb')
				bot.send_photo(message.chat.id, photo, caption=texttext, reply_markup=keyboard)
		except Exception as e:
			raise


	elif message.text == b2:
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select balance from users where id = {message.chat.id}")
		bn=cur.fetchone()[0]
		con.commit()
		bot.send_message(message.chat.id,f"–í–∞—à –±–∞–ª–∞–Ω—Å {bn} RUB",reply_markup=bal())
		bot.register_next_step_handler(message, balik)
	elif message.text == b3:
		
		bot.send_message(message.chat.id,"üîë–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥",reply_markup=cancel())
		bot.register_next_step_handler(message, promo)
	elif message.text == b4:
		bot.send_message(message.chat.id,b4)
	elif message.text == b11:
		
		bot.send_message(message.chat.id,a11,reply_markup=userpanel())
	elif message.text == vxodadmin and message.chat.id == admin:
		adm = types.InlineKeyboardMarkup()
		adm1 = types.InlineKeyboardButton(text=b4, callback_data="qiwi")
		adm2 = types.InlineKeyboardButton(text=b5, callback_data="stat")
		adm3 = types.InlineKeyboardButton(text=b6, callback_data="send")
		adm4 = types.InlineKeyboardButton(text=b9, callback_data="addancete")
		adm7 = types.InlineKeyboardButton(text=b22, callback_data="addphoto")
		adm5 = types.InlineKeyboardButton(text=b10, callback_data="deleteancete")
		adm6 = types.InlineKeyboardButton(text=b7, callback_data="esc")
		adm.add(adm1)
		adm.add(adm2)
		adm.add(adm3)
		adm.add(adm4) #—Å–ª–∏—Ç–æ –≤ @slivmens
		adm.add(adm7)
		adm.add(adm5)
		adm.add(adm6)
		bot.send_message(message.chat.id,"–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å‚öôÔ∏è",reply_markup=adm)
	elif message.text == vxodworker:
		wrk = types.InlineKeyboardMarkup()
		wrk1 = types.InlineKeyboardButton(text=b8, callback_data="ref")
		wrk2 = types.InlineKeyboardButton(text=b18, callback_data="prom")
		wrk4 = types.InlineKeyboardButton(text=b5, callback_data="statw")
		wrk3 = types.InlineKeyboardButton(text=b11, callback_data="menu")

		wrk.add(wrk1)
		wrk.add(wrk2)
		wrk.add(wrk4)
		wrk.add(wrk3)
		bot.send_message(message.chat.id,"–í–æ—Ä–∫–µ—Ä –ø–∞–Ω–µ–ª—å‚öôÔ∏è",reply_markup=wrk)
	elif message.text == b19:
		bot.send_message(message.chat.id,a19)
	elif message.text == b20:
		bot.send_message(message.chat.id,"–û—Ç–º–µ–Ω–µ–Ω–æ",reply_markup=userpanel())





@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	keyboard = types.InlineKeyboardMarkup()
	q1 = types.InlineKeyboardButton(text=b14, callback_data="vybor")
	q2 = types.InlineKeyboardButton(text=b15, callback_data="photos")
	q3 = types.InlineKeyboardButton(text=b16, callback_data="prew")
	q4 = types.InlineKeyboardButton(text=b17, callback_data="next")
	keyboard.add(q1,q2)
	keyboard.add(q3,q4)
	if call.message:
		if call.data == "next":
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select photoid from users where id = {call.message.chat.id}")
			imgid = cur.fetchone()[0]
			con.commit()
			imgid +=1


			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select count(*) from ancety")
			counta=cur.fetchone()[0]
			con.commit()

			if imgid>counta:
				imgid=1
			
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select status from ancety where id = {imgid}")
			stat = cur.fetchone()[0]
			con.commit()

			while stat ==0 :
				imgid+=1
				if imgid>counta:
					imgid=1
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select status from ancety where id = {imgid}")
				stat = cur.fetchone()[0] #—Å–ª–∏—Ç–æ –≤ @slivmens
				con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"UPDATE users SET photoid = {imgid} WHERE id = {call.message.chat.id}")
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select mainphoto from ancety where id = {imgid}")
			img = cur.fetchone()[0]
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select name from ancety where id = {imgid}")
			aname = cur.fetchone()[0]
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select cena from ancety where id = {imgid}")
			acena = cur.fetchone()[0]
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select about from ancety where id = {imgid}")
			aabout = cur.fetchone()[0]
			con.commit()

			

			texttext = f"‚ù£Ô∏è–ê–Ω–∫–µ—Ç–∞ ‚Ññ{imgid}\n\nüíÅ‚Äç‚ôÄÔ∏è–ò–º—è: {aname}\n\nüí∞–¶–µ–Ω–∞ –∑–∞ —á–∞—Å: {acena}\n\nüßö‚Äç‚ôÄÔ∏è–û —Å–µ–±–µ: {aabout}"

			imglink=f"images/{img}"
			photo = open(imglink, 'rb')


			bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id, media=types.InputMediaPhoto(photo), reply_markup=keyboard)
			bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=texttext, reply_markup=keyboard)
		elif call.data == "prew":
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select photoid from users where id = {call.message.chat.id}")
			imgid = cur.fetchone()[0]
			con.commit()
			imgid -=1

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select count(*) from ancety")
			counta=cur.fetchone()[0]
			con.commit()

			if imgid<1:
				imgid=counta

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select status from ancety where id = {imgid}")
			stat = cur.fetchone()[0]
			con.commit()

			while stat ==0 :
				imgid-=1
				if imgid<1:
					imgid=counta
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select status from ancety where id = {imgid}")
				stat = cur.fetchone()[0]
				con.commit()
			
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"UPDATE users SET photoid = {imgid} WHERE id = {call.message.chat.id}")
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select mainphoto from ancety where id = {imgid}")
			img = cur.fetchone()[0]
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select name from ancety where id = {imgid}")
			aname = cur.fetchone()[0]
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select cena from ancety where id = {imgid}")
			acena = cur.fetchone()[0]
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select about from ancety where id = {imgid}")
			aabout = cur.fetchone()[0]
			con.commit()

			

			texttext = f"‚ù£Ô∏è–ê–Ω–∫–µ—Ç–∞ ‚Ññ{imgid}\n\nüíÅ‚Äç‚ôÄÔ∏è–ò–º—è: {aname}\n\nüí∞–¶–µ–Ω–∞ –∑–∞ —á–∞—Å: {acena}\n\nüßö‚Äç‚ôÄÔ∏è–û —Å–µ–±–µ: {aabout}"

			imglink=f"images/{img}"
			photo = open(imglink, 'rb')
			bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id, media=types.InputMediaPhoto(photo), reply_markup=keyboard)
			bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=texttext, reply_markup=keyboard)
		elif call.data == "addancete":
			bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–ª–∞–≤–Ω–æ–µ —Ñ–æ—Ç–æ –∞–Ω–∫–µ—Ç—ã")
			bot.register_next_step_handler(call.message, newancet)
		elif call.data == "menu":
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text ="–í–æ—Ä–∫–µ—Ä –ø–∞–Ω–µ–ª—å –∑–∞–∫—Ä—ã—Ç–∞")
			#—Å–ª–∏—Ç–æ –≤ @slivmens
		elif call.data == "prom": 
			bot.send_message(call.message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥.")
			bot.register_next_step_handler(call.message, create_promo)
		elif call.data == "esc":
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text ="–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∑–∞–∫—Ä—ã—Ç–∞")
			
		elif call.data == "deleteancete":
			bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–Ω–∫–µ—Ç—ã –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å",reply_markup=cancel())
			bot.register_next_step_handler(call.message, otklancete)
		elif call.data == "prov":
			user_id = call.message.chat.id

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select num from qiwi")
			qiwinumber = cur.fetchone()[0]
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select token from qiwi")
			token_qiwi = cur.fetchone()[0]
			con.commit()

			QIWI_TOKEN = token_qiwi
			QIWI_ACCOUNT = str(qiwinumber)
			s = requests.Session()
			s.headers['authorization'] = 'Bearer ' + QIWI_TOKEN
			parameters = {'rows': '50'}
			h = s.get('https://edge.qiwi.com/payment-history/v1/persons/' + QIWI_ACCOUNT + '/payments',params=parameters)
			req = json.loads(h.text)
			try:
				cur.execute(f"SELECT * FROM oplata WHERE id = {user_id}")
				result = cur.fetchone()
				comment = str(result[1])

				for x in range(len(req['data'])):
					
					if req['data'][x]['comment'] == comment:
						
						skolko = (req['data'][x]['sum']['amount'])
						cur.execute(f"DELETE FROM oplata WHERE id = {user_id}")
						con.commit()
						#—Å–ª–∏—Ç–æ –≤ @slivmens
						
						con = sqlite3.connect("data.db")
						cur = con.cursor()
						cur.execute(f"select balance from users WHERE id = {call.message.chat.id}")
						balancenow = cur.fetchone()[0]
						con.commit()

						con = sqlite3.connect("data.db")
						cur = con.cursor()
						cur.execute(f"UPDATE users SET balance = {balancenow+skolko} WHERE id = {call.message.chat.id}")
						con.commit()
						

						cur.execute(f"SELECT boss FROM users WHERE id = {user_id}")

						for worker in cur.execute(f"SELECT boss FROM users WHERE id = {user_id}"):
							wk = worker[0]
						cur.execute(f"SELECT username FROM users WHERE id = {wk}")

						for username in cur.execute(f"SELECT username FROM users WHERE id = {wk}"):
							workerusername = username[0]
						for name in cur.execute(f"SELECT name FROM users WHERE id = {wk}"):
							workername = name[0]

						con = sqlite3.connect("data.db")
						cur = con.cursor()
						cur.execute(f"select name from users where id = {call.message.chat.id}")
						mamont = cur.fetchone()[0]
						con.commit()

						bot.send_message(zalety,f"üíï –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ üíï\n\nüí∞ –°—É–º–º–∞ {skolko}—Ä\n\nü¶πüèª‚Äç‚ôÄÔ∏è –í–æ—Ä–∫–µ—Ä @{workerusername} ({workername})\n\nüêò–ú–∞–º–æ–Ω—Ç {mamont}")
						bot.send_message(call.message.chat.id,f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω.\n\n–ë–∞–ª–∞–Ω—Å {balancenow+skolko} RUB",reply_markup=userpanel())


						
						break
					else:
						bot.send_message(call.message.chat.id,"‚ö†Ô∏è–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏‚ö†Ô∏è\n\n–û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑ –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–∂–º–∏—Ç–µ \"–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É\"")
						
						break

			except:
				pass
		elif call.data == "stat":
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"SELECT COUNT (*) FROM users")
			number = cur.fetchone()[0]
			con.commit()
			bot.send_message(call.message.chat.id, f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ - {number}")
		elif call.data == "vkl":
			try:
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select count(*) from ancety")
				c=cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()

				cur.execute(f"UPDATE ancety SET status = {1} WHERE id = {c}")
				con.commit()
				bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text ="–ê–Ω–∫–µ—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞")
				
			except Exception as e:
				raise
		elif call.data == "otkl":
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text ="–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
			bot.register_next_step_handler(call.message, main_message)
		elif call.data == "ref":
			reflnk=f"http://t.me/{bot_username}?start={call.message.chat.id}"
			otvet_ref = f"–í–∞—à–∞ —Ä–µ—Ñ —Å—Å—ã–ª–∫–∞ {reflnk}"
			bot.send_message(call.message.chat.id,otvet_ref)
		elif call.data == "qiwi":
			bot.send_message(call.message.chat.id,"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞(–±–µ–∑ + –∞) –∏ —Ç–æ–∫–µ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ  –Ω–æ–º–µ—Ä:—Ç–æ–∫–µ–Ω\n\n–ü—Ä–∏–º–µ—Ä 7916123456:s132sdfsdf21s5f6sdf1s3s3dfs132",reply_markup=cancel())
			bot.register_next_step_handler(call.message,replaceqiwi)
		elif call.data == "send":
			#—Å–ª–∏—Ç–æ –≤ @slivmens
			
			bot.send_message(call.message.chat.id,"–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—ã–ª–∫–∏",reply_markup=cancel())
			bot.register_next_step_handler(call.message,rass)
		elif call.data == "vybor":
			
			bot.send_message(call.message.chat.id,skolkochasov,reply_markup=cancel())
			bot.register_next_step_handler(call.message,chas)
		elif call.data == "addphoto":
			bot.send_message(call.message.chat.id,"–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–Ω–∫–µ—Ç—ã –∫ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏",reply_markup=cancel())
			bot.register_next_step_handler(call.message,addp)
		elif call.data == "photos":
			# try:
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"SELECT photoid from users where id = {call.message.chat.id}")
				pi = cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select count(*) from photos where anceta = {pi}")
				allp = cur.fetchone()[0]
				con.commit()

				if allp == 0:
					bot.send_message(call.message.chat.id,"–ë–æ–ª—å—à–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ—Ç—É.")

				else:
					con = sqlite3.connect("data.db")
					cur = con.cursor()
					
					cur.execute(f"SELECT image FROM photos where anceta = {pi}")
					id = cur.fetchall()
					con.commit()

					con = sqlite3.connect("data.db")
					cur = con.cursor()
					
					cur.execute(f"SELECT mainphoto FROM ancety where id = {pi}")
					mi=f"images/{cur.fetchone()[0]}"
					con.commit()
					mip = open(mi, 'rb')

					bot.edit_message_media(chat_id=call.message.chat.id, message_id=call.message.message_id,media=types.InputMediaPhoto(mip))
					for i in id:
						try:
							imglink=f"images/{i[0]}"
							photo = open(imglink, 'rb')
							bot.send_photo(call.message.chat.id, photo)						
							time.sleep(0.1)
						except:
							pass
#—Å–ª–∏—Ç–æ –≤ @slivmens

					con = sqlite3.connect("data.db")
					cur = con.cursor()
					cur.execute(f"select mainphoto from ancety where id = {pi}")
					img = cur.fetchone()[0]
					con.commit()

					con = sqlite3.connect("data.db")
					cur = con.cursor()
					cur.execute(f"select name from ancety where id = {pi}")
					aname = cur.fetchone()[0]
					con.commit()

					con = sqlite3.connect("data.db")
					cur = con.cursor()
					cur.execute(f"select cena from ancety where id = {pi}")
					acena = cur.fetchone()[0]
					con.commit()

					con = sqlite3.connect("data.db")
					cur = con.cursor()
					cur.execute(f"select about from ancety where id = {pi}")
					aabout = cur.fetchone()[0]
					con.commit()

					texttext = f"‚ù£Ô∏è–ê–Ω–∫–µ—Ç–∞ ‚Ññ{pi}\n\nüíÅ‚Äç‚ôÄÔ∏è–ò–º—è: {aname}\n\nüí∞–¶–µ–Ω–∞ –∑–∞ —á–∞—Å: {acena}\n\nüßö‚Äç‚ôÄÔ∏è–û —Å–µ–±–µ: {aabout}"
					


					
					imglink=f"images/{img}"
					photo = open(imglink, 'rb')
					bot.send_photo(call.message.chat.id, photo, caption=texttext, reply_markup=keyboard)

			# except Exception as e:
			# 	bot.send_message(call.message.chat.id, e)
		elif call.data == "statw":
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select count(*) from users where boss = {call.message.chat.id}")
			wref = cur.fetchone()[0]
			con.commit()

			bot.send_message(call.message.chat.id, f"–£ –≤–∞—Å {wref} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")




			
			




			


			
			

		else:
			pass




#—Å–ª–∏—Ç–æ –≤ @slivmens

@bot.message_handler(content_types=['photo'])
def newancet(message):

	try:


		file_info = bot.get_file(message.photo[len(message.photo)-1].file_id)
		downloaded_file = bot.download_file(file_info.file_path)

		src='images/'+file_info.file_path;
		with open(src, 'wb') as new_file:
			new_file.write(downloaded_file)
			
		
		imglink=file_info.file_path

		
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select count(*) from ancety")
		c=cur.fetchone()[0]
		con.commit()
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		nn="a"
		mm = 0
		cur.execute(f"INSERT INTO ancety (id,mainphoto,name,cena,about,status)"
			f"VALUES ({c+1},\"{imglink}\",\"{nn}\",{mm},\"{nn}\",{0})")
		con.commit()

		bot.send_message(message.chat.id,"–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ\n\n–ö–∞–∫ –±—É–¥–µ–º –Ω–∞–∑—ã–≤–∞—Ç—å —ç—Ç—É –±–∞–±–æ—á–∫—É?üôÉ")
		bot.register_next_step_handler(message, nameancet)



	except Exception as e:
		bot.reply_to(message,e)

@bot.message_handler(content_types="text")
def nameancet(message):
	try:
		nameb = message.text
		
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select count(*) from ancety")
		c=cur.fetchone()[0]
		con.commit()

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"UPDATE ancety SET name = \'{nameb}\' WHERE id = {c}")
		con.commit()
		
		bot.send_message(message.chat.id,"–ò–º—è –≤—ã–±—Ä–∞–Ω–æ ‚úÖ\n–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –±–∞–±–æ—á–∫–∏ –∑–∞ —á–∞—Å üí∏")
		bot.register_next_step_handler(message, cenaancet)
	except Exception as e:
		bot.reply_to(message,e)
		bot.register_next_step_handler(message, nameancet)

@bot.message_handler(content_types="text")
def cenaancet(message):
	try:
		if message.text.isdigit():
			cenna = int(message.text)
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select count(*) from ancety")
			c=cur.fetchone()[0]
			con.commit()
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"UPDATE ancety SET cena = {cenna} WHERE id = {c}")
			con.commit()
			
			bot.send_message(message.chat.id,"–¶–µ–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞ ‚úÖ\n–í–≤–µ–¥–∏—Ç–µ —É—Å–ª—É–≥–∏ –¥–µ–≤—É—à–∫–∏")
			bot.register_next_step_handler(message, uslugiancet)

		else:
			bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
			bot.register_next_step_handler(message, cenaancet)


	except Exception as e:
		bot.reply_to(message,e)
		bot.register_next_step_handler(message, cenaancet)


@bot.message_handler(content_types="text")
def uslugiancet(message):
	try:
		
		uslu = message.text
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select count(*) from ancety")
		c=cur.fetchone()[0]
		con.commit()
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"UPDATE ancety SET about = \'{uslu}\' WHERE id = {c}")
		con.commit()

		ak = types.InlineKeyboardMarkup()
		ak1 = types.InlineKeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å", callback_data="vkl")
		ak2 = types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="otkl")

		ak.add(ak1)
		ak.add(ak2)

		


		

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select mainphoto from ancety where id = {c}")
		img = cur.fetchone()[0]
		con.commit()

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select name from ancety where id = {c}")
		aname = cur.fetchone()[0]
		con.commit()

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select cena from ancety where id = {c}")
		acena = cur.fetchone()[0]
		con.commit()

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select about from ancety where id = {c}")
		aabout = cur.fetchone()[0]
		con.commit()

		texttext = f"‚ù£Ô∏è–ê–Ω–∫–µ—Ç–∞ ‚Ññ{c}\n\nüíÅ‚Äç‚ôÄÔ∏è–ò–º—è: {aname}\n\nüí∞–¶–µ–Ω–∞ –∑–∞ —á–∞—Å: {acena}\n\nüßö‚Äç‚ôÄÔ∏è–û —Å–µ–±–µ: {aabout}"
		


		imglink=f"images/{img}"
		photo = open(imglink, 'rb')
		bot.send_photo(message.chat.id, photo, caption=texttext)
		
		bot.send_message(message.chat.id,"–ê–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞ !\n–í–∫–ª—é—á–∏—Ç—å –¥–∞–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É ?",reply_markup=ak)

		
		
		


		bot.register_next_step_handler(message, main_message)

		
			


	except Exception as e:
		bot.reply_to(message,e)
		bot.register_next_step_handler(message, uslugiancet)




		

@bot.message_handler(content_types="text")
def otklancete(message):
	try:
		nomer = message.text
		if message.text == b20:
			bot.send_message(message.chat.id,"–û—Ç–º–µ–Ω–µ–Ω–æ",reply_markup=userpanel())
			bot.register_next_step_handler(message, main_message)
		else:


			if nomer.isdigit():
				try:
					con = sqlite3.connect("data.db")
					cur = con.cursor()
					cur.execute(f"select count(*) from ancety where id = {nomer}")
					if cur.fetchone()[0] == 1:
						con.commit()

						con = sqlite3.connect("data.db")
						cur = con.cursor()
						cur.execute(f"UPDATE ancety SET status = {0} WHERE id ={nomer}")
						con.commit()
						bot.send_message(message.chat.id,"–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞",reply_markup=userpanel())
						bot.register_next_step_handler(message, main_message)



						
					else:
						bot.send_message(message.chat.id,"–ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∞–Ω–∫–µ—Ç—ã")
						bot.register_next_step_handler(message, otklancete)



					
				except Exception as e:
					bot.reply_to(message,e)
					bot.register_next_step_handler(message, otklancet)
				
			else:
				bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
				bot.register_next_step_handler(message, otklancet)
			
	except Exception as e:
		bot.reply_to(message,e)
		bot.register_next_step_handler(message, otklancet)
	


@bot.message_handler(content_types="text")
def create_promo(message):
	try:
		if message.text.isdigit():
			summ = int(message.text)
			if summ>maxpromo:
				bot.send_message(message.chat.id,f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ {maxpromo}")
				bot.register_next_step_handler(message, create_promo)
			elif summ<=0:
				bot.send_message(message.chat.id,f"–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
				bot.register_next_step_handler(message, create_promo)
			else:
				letters = string.ascii_letters
				codecode = ( ''.join(random.choice(letters) for i in range(10)) )
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"INSERT INTO promocode (summa,code)"
							f"VALUES ({summ},\'{codecode}\')")
				con.commit()
				bot.send_message(message.chat.id,f"–ü—Ä–æ–º–æ–∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω !\n\n`{codecode}`\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å",parse_mode='Markdown')
				bot.register_next_step_handler(message, main_message)


		else:
			bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")

	except Exception as e:
		bot.reply_to(message,e)
		bot.register_next_step_handler(message, create_promo)

@bot.message_handler(content_types="text")
def promo(message):

	try:
		testpromo = message.text
		if testpromo == b20:
			bot.send_message(message.chat.id,"–û—Ç–º–µ–Ω–µ–Ω–æ",reply_markup=userpanel())
			bot.register_next_step_handler(message, main_message)

		else:
			
		
			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"select count(*) from promocode where code = \'{testpromo}\'")
			
			r = cur.fetchone()[0]

			con.commit()
			
			if r == 0:
				
				
				bot.send_message(message.chat.id,"–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º–æ–∫–æ–¥.")
				bot.register_next_step_handler(message, promo)
			else:
				
				
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select summa from promocode where code = \'{testpromo}\'")
				summpromo = cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"DELETE  from promocode where code = \'{testpromo}\'")
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select balance from users where id = {message.chat.id}")
				balancenow = cur.fetchone()[0]
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"UPDATE users SET balance = {balancenow+summpromo} WHERE id = {message.chat.id}")
				con.commit()



				bot.send_message(message.chat.id,f"‚ôªÔ∏è–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {summpromo}\n\nüí∞–ë–∞–ª–∞–Ω—Å {balancenow+summpromo} RUB",reply_markup=userpanel())
				bot.register_next_step_handler(message, main_message)



	except Exception as e:
		pass
		
	


@bot.message_handler(content_types="text")
def balik(message):
	if message.text == b12:
		bot.send_message(message.chat.id,"–ù–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å",reply_markup=cancel())
		bot.register_next_step_handler(message, popolni)

	elif message.text == b20:
		bot.send_message(message.chat.id,"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=userpanel())
		bot.register_next_step_handler(message, main_message)
		
			
@bot.message_handler(content_types="text")
def popolni(message):
	if message.text == b20:
		bot.send_message(message.chat.id,"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=userpanel())
		bot.register_next_step_handler(message, main_message)
	else:	

	
		if message.text.isdigit():
			skolko = int(message.text)
			if skolko >= minimalka and skolko <=maximalka:
				try:
					con = sqlite3.connect("data.db")
					cur = con.cursor()
					cur.execute(f"DELETE FROM oplata WHERE id = {message.chat.id}")
					con.commit()
				except Exception as e:
					raise
				
				con = sqlite3.connect("data.db")
				cur = con.cursor()
				comment = randint(10000, 9999999)
				cur.execute(f"INSERT INTO oplata (id, code) VALUES({message.chat.id}, {comment})")
				con.commit()

				con = sqlite3.connect("data.db")
				cur = con.cursor()
				cur.execute(f"select num from qiwi")
				qiwinumber = cur.fetchone()[0]
				con.commit()


				texttt = f'‚ôªÔ∏è–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ {skolko}‚ÇΩ –Ω–∞ —Å—á–µ—Ç Qiwi\n\n–ù–æ–º–µ—Ä: `{qiwinumber}`\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π `{comment}`\n\n_–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —á—Ç–æ–±—ã –∏—Ö —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å_'
				link = f"https://qiwi.com/payment/form/99?extra%5B%27account%27%5D={qiwinumber}&amountInteger={skolko}&amountFraction=0&currency=643&extra%5B%27comment%27%5D={comment}&blocked[0]=sum&blocked[1]=account&blocked[2]=comment"
				markup_inline = types.InlineKeyboardMarkup()
				pereyti = types.InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π", callback_data="site", url=link)
				proverka = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É' ,callback_data='prov')
				markup_inline.add(pereyti)
				markup_inline.add(proverka)


				bot.send_message(message.from_user.id,texttt,parse_mode='Markdown',reply_markup=markup_inline)
				bot.register_next_step_handler(message, main_message)

			else:
				bot.send_message(message.chat.id,f"–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç {minimalka} –¥–æ {maximalka}")
				bot.register_next_step_handler(message, popolni)
					
		else:
			bot.send_message(message.chat.id,"–ù–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ")
			bot.register_next_step_handler(message, popolni)

		

	

@bot.message_handler(content_types="text")
def replaceqiwi(message):
	try:
		newqiwi = message.text

		if newqiwi == b20:
			bot.send_message(message.from_user.id,f"–û—Ç–º–µ–Ω–µ–Ω–æ",reply_markup=userpanel())
			bot.register_next_step_handler(message, main_message)
		else:
			
			q = newqiwi.split(":")
			nq = int(q[0])
			tq = q[1]

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"UPDATE qiwi SET num = {nq}")
			con.commit()

			con = sqlite3.connect("data.db")
			cur = con.cursor()
			cur.execute(f"UPDATE qiwi SET token = \'{tq}\'")
			con.commit()

			bot.send_message(message.from_user.id,f"–î–∞–Ω–Ω—ã–µ –∫–∏–≤–∏ –∏–∑–º–µ–Ω–µ–Ω—ã\n\n–ù–æ–≤—ã–π –Ω–æ–º–µ—Ä: {nq}\n–ù–æ–≤—ã —Ç–æ–∫–µ–Ω: {tq}",reply_markup=userpanel())
			bot.register_next_step_handler(message, main_message)

		

	except Exception as e:
		raise

#—Å–ª–∏—Ç–æ –≤ @slivmens

@bot.message_handler(content_types="text")
def rass(message):
	if message.text == b20:
		bot.send_message(message.from_user.id, "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞",reply_markup=userpanel())
		bot.register_next_step_handler(message, main_message)

	else:	
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		bot.send_message(message.from_user.id, "–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–∞")
		cur.execute("SELECT id FROM users")
		id = cur.fetchall()
		for i in id:
			try:
				bot.send_message(i[0], f"{message.text}")
				time.sleep(0.1)
			except:
				pass
		bot.send_message(message.from_user.id, "–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞",reply_markup=userpanel())
		bot.register_next_step_handler(message, main_message)



@bot.message_handler(content_types="text")
def chas(message):
	try:
		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select photoid from users where id = {message.chat.id}")
		vi=cur.fetchone()[0]
		con.commit()

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select balance from users where id = {message.chat.id}")
		bnow=cur.fetchone()[0]
		con.commit()

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select cena from ancety where id = {vi}")
		op=cur.fetchone()[0]
		con.commit()

		skch = message.text
		if message.text == b20:
			bot.send_message(message.from_user.id, "–û—Ç–º–µ–Ω–µ–Ω–æ.",reply_markup=userpanel())
			bot.register_next_step_handler(message, main_message)
		else:
			
			if skch.isdigit():
				if int(skch) >= 0 and int(skch) <=24:
					if int(skch)%1 == 0:
						if int(skch) >=2:
							op = op + (int(skch)*op)/2

						if op > bnow:
							bot.send_message(message.from_user.id, f"–ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ –¥–æ—Å—Ç–∞—Ç–∞—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.\n–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ {op}\n–ù–∞ –±–∞–ª–∞–Ω—Å–µ {bnow}",reply_markup=bal())
							bot.register_next_step_handler(message, balik)
						else:
							con = sqlite3.connect("data.db")
							cur = con.cursor()
							cur.execute(f"UPDATE users SET balance = {bnow-op} WHERE id = {message.chat.id}")
							con.commit()

							bot.send_message(message.from_user.id, f"–£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞\n\n–û–∂–∏–¥–∞–π—Ç–µ —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è",reply_markup=userpanel())
							bot.register_next_step_handler(message, main_message)
								

								

					else:
						bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")
						bot.register_next_step_handler(message, chas)
						
				else:
					bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 24.")
					bot.register_next_step_handler(message, chas)
						
			else:
				bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
				bot.register_next_step_handler(message, chas)
				
	except Exception as e:
		raise



@bot.message_handler(content_types="text")
def addp(message):
	if message.text == b20:
		bot.send_message(message.from_user.id, "–û—Ç–º–µ–Ω–µ–Ω–æ",reply_markup=userpanel())
		bot.register_next_step_handler(message, main_message)
	else:
		try:
			
		
		
		 
			if message.text.isdigit():
				nnn = int(message.text)
				try:
					con = sqlite3.connect("data.db")
					cur = con.cursor()
					cur.execute(f"select count(*) from ancety where id = {nnn}")
					addcount=cur.fetchone()[0]
					con.commit()
					if addcount == 0:
						bot.send_message(message.from_user.id, "–ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä")
						bot.register_next_step_handler(message, addp)
					else:
						con = sqlite3.connect("data.db")
						cur = con.cursor()
						cur.execute(f"select count(*) from photos")
						countphotos=cur.fetchone()[0]
						con.commit()

						con = sqlite3.connect("data.db")
						cur = con.cursor()
						cur.execute(f"select mainphoto from ancety where id = {nnn}")
						mphoto=cur.fetchone()[0]
						con.commit()

						con = sqlite3.connect("data.db")
						cur = con.cursor()
						cur.execute(f"INSERT INTO photos (id,anceta,image)"
									f"VALUES ({countphotos+1},{nnn},\'{mphoto}\')")
						
						con.commit()
						bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ.")
						bot.register_next_step_handler(message, addimage)


				except Exception as e:
					raise
				
				

			else:
				bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ")
				bot.register_next_step_handler(message, addp)
		except Exception as e:
			raise

@bot.message_handler(content_types=['photo'])
def addimage(message):
	try:
		file_info = bot.get_file(message.photo[len(message.photo)-1].file_id)
		downloaded_file = bot.download_file(file_info.file_path)

		src='images/'+file_info.file_path;
		with open(src, 'wb') as new_file:
			new_file.write(downloaded_file)
			
		
		imagelink=file_info.file_path

		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"select count(*) from photos")
		countphotos=cur.fetchone()[0]
		con.commit()


		con = sqlite3.connect("data.db")
		cur = con.cursor()
		cur.execute(f"UPDATE photos SET image = \'{imagelink}\' WHERE id = {countphotos}")
		con.commit()

		bot.send_message(message.from_user.id, "–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.",reply_markup=userpanel())
		bot.register_next_step_handler(message, main_message)	





	except Exception as e:
		raise
	
	#—Å–ª–∏—Ç–æ –≤ @slivmens

if __name__ == '__main__':
	bot.polling(none_stop=True)
